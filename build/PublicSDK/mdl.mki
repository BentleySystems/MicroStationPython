#--------------------------------------------------------------------------------------
#  Copyright (c) Bentley Systems, Incorporated. All rights reserved.
#  See LICENSE.md in the repository root for full copyright notice.
#--------------------------------------------------------------------------------------
%if defined (__mdlMKI__)
    %warn mdl.mki is being included redundantly in $(_MakeFileSpec)
    %if defined (DebugRedundantMkiIncludes)
        %error DebugRedundantMkiIncludes is defined.
    %endif
    %return
%endif
__mdlMKI__=1

#============================================================================
# The version of Microstation that this particular mdl.mki is from.
#  Set this early in case the policy files need it.
#============================================================================
%if !defined(MSTN_VERSION)
    MSTN_VERSION = 10000000
%endif

#----------------------------------------------------------
#   Configure build policy
#----------------------------------------------------------
%include ConfigurePolicy.mki

#----------------------------------------------------------
#   Choose compiler version.
#----------------------------------------------------------
%if !defined (SharedShell) && defined (BSI)
    %include compilers.mki
%endif

#------------------------------------------------------------------------
#   common include file for development environment
#------------------------------------------------------------------------
%include common.mki

#============================================================================
#
#    Define required macros, if they are not found from environment,
#    policy or cmd line
#
#============================================================================

#----------------------------------------------------------
#   basic build definitions
#----------------------------------------------------------
msg = |[== Building $@, ($=) ==]

%if !defined (language)
    language    = english
%endif

%if !defined (langSpec)
    langSpec    = $(baseDir)$(language)/
%endif


#----------------------------------------------------------
#        Define native code tools that are platform dependent
#----------------------------------------------------------
%if defined (BUILD_USING_GCC)
    %include gccmdl.mki
%elif defined (BUILD_USING_LLVM)
    %include llvmmdl.mki
%else
    %include winntmdl.mki
%endif

#----------------------------------------------------------
#        Define tools commands common to all platforms
#----------------------------------------------------------
%ifndef MLibCmd
    MLibCmd             = $(toolsPath)mlib
%endif

%ifndef RCompCmd
    RCompCmd            = $(toolsPath)rcomp
%endif

%ifndef RTypeCmd
    RTypeCmd            = $(toolsPath)rsctype
%endif

%ifndef RLibCmd
    RLibCmd             = $(toolsPath)rlib
%endif

%ifndef dlmspecCmd
    dlmspecCmd          = $(toolsPath)dlmspec
%endif

#----------------------------------------------------------
#        Defaults for optional symbols
#----------------------------------------------------------
%if !defined (CCCompOpts)
    CCCompOpts      = $(CCompOpts)
%endif

#----------------------------------------------------------------------------
#        Inference Rules
#----------------------------------------------------------------------------

#----------------------------------------------------------
#        Compiling resource source from type definition file
#----------------------------------------------------------
    .mt.r:
        $(msg)
        > $(o)make.opt
        -o$@
    %if        privateInc
        -i${privateInc}
    %endif
        $(rscCompIncs)
        $(altIncs)
        $(PublicApiRscIncludes)
        $(platformOpts)
        $(moreRTypeOpts)
        $(ProductRcIncludes)
        $<
        <
        $(RTypeCmd)         @$(o)make.opt
        ~time

#----------------------------------------------------------
#        Compiling resource source files
#----------------------------------------------------------
    .r.rsc:
         $(msg)
        > $(o)make.opt
        $(rcompOpts)
        -w
        -o$@
        ${PublicApiRscIncludes}
    %if privateInc
        -i${privateInc}
    %endif
        $(rscCompIncs)
        $(altIncs)
        $(ProductRcIncludes)
    %if langSpec
        -i${langSpec}
    %endif
    %if debug
        -dDEBUG
    %endif
        $(moreRscCompileOpts)
        $(platformOpts)
    %if genSrc
        -i${genSrc}
    %endif
        $<
        <
    %if DeleteTargetFirst
        ~@task Microsoft.Build.Tasks.Delete -i:Files=$@ -i:Condition="'$@'!='' and Exists('$@')"
    %endif
        $(RCompCmd) @$(o)make.opt
        ~time

#----------------------------------------------------------
#        Creating include files from command table resources
#----------------------------------------------------------
    .r.h:
         $(msg)
        > $(o)make.opt
        -ho$@
        -o$(o)$*.rsc
    %if privateInc
        -i${privateInc}
    %endif
        $(rcompOpts)
        $(rscCompIncs)
        ${PublicApiRscIncludes}
        $(altIncs)
        $(ProductRcIncludes)
        $(platformOpts)
        $(moreRscCompileOpts)
        $<
        <
        $(RCompCmd) @$(o)make.opt
        ~time

#----------------------------------------------------------
#        Creating include files from managed app command table xml files.
#----------------------------------------------------------
    .(xml,keyins).h:
         $(msg)
        > $(o)make.opt
        -ho$@
    %if privateInc
        -i${privateInc}
    %endif
        $(rcompOpts)
        $(rscCompIncs)
        ${PublicApiRscIncludes}
        $(altIncs)
        $(ProductRcIncludes)
        $(platformOpts)
        $(moreRscCompileOpts)
        $<
        <
        $(RCompCmd) @$(o)make.opt
        ~time


#----------------------------------------------------------
#       Applying digital signature to resource file
#----------------------------------------------------------
rsignmsg    =        |[== Digitally Signing $= ==]

.rsc.signed:
    $(rsignmsg)
    $(rsigncmd) $<
    > $@
        signed
    <
    ~time

.exe.signed:
    $(rsignmsg)
    $(signcodecmd) $<
    > $@
        signed
    <
    ~time

.cab.signed:
    $(rsignmsg)
    $(signcodecmd) $<
    > $@
        signed
    <
    ~time

.CAB.signed:
    $(rsignmsg)
    $(signcodecmd) $<
    > $@
        signed
    <
    ~time

.MSI.signed:
    $(rsignmsg)
    $(signcodecmd) $<
    > $@
        signed
    <
    ~time

.msi.signed:
    $(rsignmsg)
    $(signcodecmd) $<
    > $@
        signed
    <
    ~time

.dll.signed:
    $(rsignmsg)
    $(dllsignAuthenticCmd) $<
    $(signcodecmd) $<
    > $@
        signed
    <
    ~time

.DLL.signed:
    $(rsignmsg)
    $(dllsignAuthenticCmd) $<
    $(signcodecmd) $<
    > $@
        signed
    <
    ~time

rsignrc1msg  =        |[== Digitally Signing Rights-Compliant $= ==]

mvbasignrc1msg=        |[== Digitally Signing Rights-Compliant $= ==]

.rsc.rc1signed:
    $(rsignrc1msg)
    $(rsignrc1cmd) $<
    > $@
        rc1signed
    <
    ~time

.mvba.rc1signed:
    $(mvbasignrc1msg)
    $(mvbasignrc1cmd) $<
    > $@
        rc1signed
    <
    ~time

#----------------------------------------------------------
#        Compiling DLM Specification files
#
#       Under Windows NT, if $(moduleDef) is defined in the
#       make file, dlmspec will generate a windows Module
#        definition file named $(moduleDef) from your .dls file.
#
#       Note: dlmlink.mki defines and uses its own rule for
#              compiling dynamic load specification files.
#----------------------------------------------------------
.dls.dlo:
    $(msg)
    > $(o)make.opt
    -o$@
   -w$(moduleDef)
    $<
    <
    $(dlmspecCmd) @$(o)make.opt
    ~time

.mc.c:
    $(CopyFirstDepToFirstTarget)

#----------------------------------------------------------
#        Override paths and rules for BSI internal use.
#----------------------------------------------------------
%if defined (USE_PRODUCT_MODS) && !defined (NO_INTERNAL_MODS)

    %if !defined (BsiMdlMki)
        BsiMdlMki = bsimdl.mki
    %endif

    %include $(BsiMdlMki)
%endif

#----------------------------------------------------------
#        Add DevStudio settings file
#----------------------------------------------------------
%if defined (DEV_STUDIO)
    %include $(SrcRoot)bsicommon\sharedmki\DevStudioCompilerSettings.mki
%endif

#----------------------------------------------------------
#       End
#----------------------------------------------------------
