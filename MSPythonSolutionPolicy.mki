#--------------------------------------------------------------------------------------
#
#     $Source: MSPython\MSPythonSolutionPolicy.mki $
#
#  $Copyright: (c) 2023 Bentley Systems, Incorporated. All rights reserved. $
#
#--------------------------------------------------------------------------------------

%if defined (BSIBUILD)
    MSPythonSrc         = $(SrcRoot)MSPython/
%else
    MSPythonSrc         = $(SrcRoot)
%endif


%if !defined (SDKLIB) && defined (mdltools) ## for MdlExample-MSPython build
    SDKLIB = $(mdltools)library/
%endif


%if defined (BSI)
    %include $(SharedMki)DefinePublicApiIncludes.mki
    %include $(SharedMki)CommonCompileLinkPolicy.mki
%else
    %include DefaultToolSet.mki

    BuildContext = $(MSMDE_OUTPUT)
    ContextDeliveryDir  = $(MSMDE_OUTPUT)
    ContextSubpartsLibs = $(SDKLIB)
    ContextSubpartsAssembliesDir = $(BuildContext)SubParts/Assemblies/
    DLM_CONTEXT_LOCATION = $(ContextDeliveryDir)
    DLM_LIB_CONTEXT_LOCATION = $(ContextDeliveryDir)
    DLM_CREATE_LIB_CONTEXT_LINK = 1
    EXE_CONTEXT_LOCATION = $(ContextDeliveryDir)
    ASSEMBLY_CONTEXT_LOCATION = $(ContextDeliveryDir)


%include PlatformSetup.mki
%include createdir.mki
#%include common.mki

%endif

nameToDefine = __MSPYTHONDLL_BUILD__
%include cdefapnd.mki

%if defined (__MSPythonPolicy_mki__)
    %return
%endif

__MSPythonPolicy_mki__  = 1

PyhonApps    = $(MSPythonSrc)/MSPythonApps/
PyhonCore    = $(MSPythonSrc)/MSPythonCore/
PyhonWrapper = $(MSPythonSrc)/MSPythonWrapper/

PythonInternalHeaders = $(MSPythonSrc)/InternalAPI/
PythonPublicHeaders   = $(MSPythonSrc)/PublicAPI/MSPythonCore/
%if defined (BSIBUILD)
PythonDir          = $(SrcRoot)/adobuildartifact/BentleyCPythonLayoutFull/
%endif
PythonLibName         = $(PythonDir)libs/python312.lib

%if defined (MSMDE)
    PublicApiRscIncludes = -i${MSMDE}/include/
%endif

dirToSearch = $(PythonDir)
%include cincapnd.mki

dirToSearch = $(PythonDir)include
%include cincapnd.mki

dirToSearch = $(PythonDir)libs
%include cincapnd.mki

dirToSearch = $(PythonInternalHeaders)
%include cincapnd.mki

dirToSearch = $(PythonPublicHeaders)
%include cincapnd.mki

%if defined (BSI)
    dirToSearch=$(BuildContext)VendorAPI/Boost_1_82
    %include cincapnd.mki
%endif

%if defined (BoostInclude)
    dirToSearch=$(BoostInclude)
    cIncs +% -I$[dirToSearch]
%else
    dirToSearch=$(OutBuildContexts)PowerPlatformSDK/VendorAPI/Boost_1_82
    cIncs +% -I$[dirToSearch]
%endif

dirToSearch = $(PyhonCore)ScriptEngineManager
%include cincapnd.mki



%if defined (mdltools)  ## for MdlExample-MSPython build
    dirToSearch = $(mdltools)include
    %include cincapnd.mki
%endif

%if defined (SDKINC)  ## for Microstation SDK build
    dirToSearch = $(SDKINC)
    %include cincapnd.mki
%endif 

%if defined (mdltools)  ## for MdlExample-MSPython build so everything is rebuild with the SDK settings
    out            = $(OutputRootDir)Build/MSPythonExample/
%else
    out            = $(OutputRootDir)Build/MSPython/
%endif

toolsPath      = $(BuildContext)SubParts/Assemblies/
mstnToolsPath  = $(BuildContext)SubParts/Assemblies/

gensrc         = $(OutputRootDir)Build/MSPython/gensrc/
gensrcTransKit = $(gensrc)TransKitGenSrc/

%if !defined (mdlasneeded)
    mdlasneeded = $(OutputRootDir)Build/PowerPlatform/Bentley/PseudoStation/mdlsys/asneeded/
%endif

